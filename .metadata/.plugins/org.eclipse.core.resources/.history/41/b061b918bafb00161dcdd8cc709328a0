package commands.TurtleCommands;

import java.util.List;

import application.Turtle;
import application.TurtleState;
import exceptions.StateNotFoundException;

/** SetTowards makes the given Turtle point towards the given location. Returns how far the Turtle turned.
 * 
 * @author Kyle
 *
 */
public class SetTowards extends TurtleCommands {
	
	public static final int VARIABLES = 2;

	private final double SECOND_QUADRANT = 180;
	private final double THIRD_QUADRANT = 270;
	private final double FOURTH_QUADRANT = 360;
	private final double DEGREES_PER_RADIAN = 180 / Math.PI;

	public SetTowards(List<Double> args) {
		super(args);
	}

	@Override
	public double execute(Turtle t) throws StateNotFoundException {
		TurtleState lastState = t.getFinalTurtleState();

		double normalizedX = arguments.get(0) - lastState.getX();
		double normalizedY = arguments.get(1) - lastState.getY();
		double newHeading = calculateAngle(normalizedX, normalizedY, lastState);

		t.addTurtleState(lastState.getX(), lastState.getY(), newHeading,
				lastState.penDown(), lastState.getColor(), lastState.turtleShowing());
		
		return Math.abs(newHeading-lastState.getHeading());
	}

	private double calculateAngle(double towardX, double towardY, TurtleState lastState) {
		if (towardX == 0) {
			if (towardY == 0) {
				return lastState.getHeading();
			} else if (towardY > 0) {
				return 90;
			} else {
				return 270;
			}
		}

		double degreesToRadians = Math.atan2(towardY, towardX) * DEGREES_PER_RADIAN;

		if (towardX > 0) {
			if (towardY > 0) {
				return degreesToRadians;
			} else {
				return FOURTH_QUADRANT - Math.abs(degreesToRadians);
			}
		} else {
			if (towardY > 0) {
				return SECOND_QUADRANT - Math.abs(degreesToRadians);
			} else {
				return THIRD_QUADRANT - Math.abs(degreesToRadians);
			}
		}
	}

}
