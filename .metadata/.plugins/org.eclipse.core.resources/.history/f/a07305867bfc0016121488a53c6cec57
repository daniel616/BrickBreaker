/**
 * Written by Alison Huang
 * 
 * This is one Node that will be added to the GUI scene
 * Features:
 * 		Text box for commands to be displayed (if lines exceed dimensions of box, a scroll will automatically appear)
 * 		Clear button to clear contents of the box
 * 		~TEMPORARY~ display button to demonstrate functionality of displaying text
 */

package gui;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;


public class ConsoleOutput extends Group {
	
	private TextArea output = new TextArea();
	private BorderPane bp = new BorderPane();
	private HBox panel = new HBox();
	private Button btn_display = new Button("Display"); //not going to be actually implemented, see comments below
	private Button btn_clear = new Button("Clear");

	
	public ConsoleOutput(){
		output.setPrefWidth(300); //hard-coded for now, we'll fix this later
		output.setPrefHeight(150);
		this.getChildren().add(output);
		makeButtonPanel();
		bp.setBottom(panel);
		this.getChildren().add(bp);
		bp.setCenter(output);
	}
	
	private void makeButtonPanel(){
		makeDisplayBtn();
		makeClearBtn();
		panel.getChildren().addAll(btn_display, btn_clear);
	}
	
	private void makeDisplayBtn(){ //this button will not actually be used; it's here for now just to demonstrate that text can be displayed
		btn_display.setOnAction(new EventHandler<ActionEvent> () {
			public void handle(ActionEvent arg){
				output.setText("hi");
			}
		});
	}
	
	private void makeClearBtn(){
		btn_clear.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(ActionEvent arg) {
				output.clear();
			}
		});
	}
	
	public void setText(String s){ //This method will be called by someone so that descriptions of commands can be displayed
		output.setText(s + "\n");
	}
	
	
}
