package commands.TurtleCommands;

import java.util.List;

import TurtleDetails.Turtle;
import TurtleDetails.TurtleState;
import commands.Commands;
import exceptions.CommandException;
import exceptions.StateNotFoundException;
import gui.TurtleScreen;

/**
 * Parent class of all Turtle commands.
 * 
 * @author Kyle
 *
 */
public abstract class TurtleCommands extends Commands {

	private final double CIRCLE_DEGREES = 360;

	public TurtleCommands(List<String> args) throws CommandException {
		super(args);
		stringsToDoubles();
	}

	public abstract double execute(Turtle t) throws StateNotFoundException, CommandException;

	protected double inBoundsLocation(double attemptedLocation) {
		return (attemptedLocation > TurtleScreen.SCREEN_SIZE) ? TurtleScreen.SCREEN_SIZE : attemptedLocation;
	}

	protected double normalizeHeading(double heading) {
		double newHeading = heading % CIRCLE_DEGREES;
		if (newHeading < 0)
			return -newHeading;
		return newHeading;
	}

	protected double move(Turtle t, boolean isForward) throws StateNotFoundException {
		TurtleState lastState = t.getFinalTurtleState();

		double[] newLocation = newLocation(lastState, isForward);

		t.addTurtleState(newLocation[0], newLocation[1], lastState.getHeading(), lastState.penDown(),
				lastState.getColor(), lastState.turtleShowing());

		return doubleArguments.get(0);
	}

	private double[] newLocation(TurtleState lastState, boolean isForward) {
		double newX = lastState.getX()
				+ (isForward ? 1.0 : -1.0) * doubleArguments.get(0) * Math.cos(lastState.getHeading());
		double newY = lastState.getY()
				+ (isForward ? 1.0 : -1.0) * doubleArguments.get(0) * Math.sin(lastState.getHeading());

		// TODO how to access variables from front-end to determine x and y
		// location of Turtle
		if (newX > TurtleScreen.SCREEN_SIZE) {
			newX = TurtleScreen.SCREEN_SIZE;
		}
		if (newX < 0) {
			newX = 0;
		}
		if (newY > TurtleScreen.SCREEN_SIZE) {
			newY = TurtleScreen.SCREEN_SIZE;
		}
		if (newY < 0) {
			newY = 0;
		}

		double[] newLocation = { newX, newY };
		return newLocation;

	}

}
