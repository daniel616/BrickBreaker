/**
 * Written by Alison Huang
 * 
 * This is one Node that will be added to the overall GUI Scene
 * Features:
 * 		Text box for user to input commands (if lines exceed dimensions of box, a scroll automatically appears)
 * 		Execute button to send one raw string to back-end to get parsed
 * 		Clear button to clear contents of the box
 */

package application;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;

public class TextInput extends Group {
	
	private TextArea input = new TextArea();
	private BorderPane bp = new BorderPane();
	private HBox panel = new HBox();
	private Button btn_execute = new Button("Execute");
	private Button btn_clear = new Button("Clear");
	
	public TextInput(){
		input.setPrefWidth(300); //these are hard-coded for now, but should be fixed later
		input.setPrefHeight(150);
		
		this.getChildren().add(input);
		makeButtonPanel();
		bp.setBottom(panel);
		this.getChildren().add(bp);
		bp.setCenter(input);
	}
	
	private void makeButtonPanel(){
		makeExecuteBtn();
		makeClearBtn();
		panel.getChildren().addAll(btn_execute, btn_clear);
	}
	
	private void makeExecuteBtn(){
		btn_execute.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(ActionEvent arg) {
				System.out.println(input.getText()); //the actions of this button will change once we can link the front-end and back-end
			}
		});
	}
	
	private void makeClearBtn(){
		btn_clear.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(ActionEvent arg) {
				input.clear();
			}
		});
	}
	
	public String getText(){ //unclear if front-end sends all the text to back-end, or if back-end calls for the text
		return input.getText(); //if the back-end is calling for the text, use this method
	}
	
}