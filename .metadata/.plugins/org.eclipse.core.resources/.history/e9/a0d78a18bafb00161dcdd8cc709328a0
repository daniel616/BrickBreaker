package commands.TurtleCommands;

import java.util.List;

import application.Turtle;
import application.TurtleState;
import exceptions.StateNotFoundException;

/**
 * Moves Turtle forward based on specified distance and current heading of
 * Turtle.
 * 
 * @author Kyle
 *
 */
public class Forward extends TurtleCommands {
	
	public static final int VARIABLES = 1;

	public Forward(List<Double> args) {
		super(args);
	}

	@Override
	public double execute(Turtle t) throws StateNotFoundException {
		TurtleState lastState = t.getFinalTurtleState();

		double[] newLocation = newLocation(lastState);

		t.addTurtleState(newLocation[0], newLocation[1], lastState.getHeading(), lastState.penDown(),
				lastState.getColor(), lastState.turtleShowing());

		return arguments.get(0);
	}

	private double[] newLocation(TurtleState lastState) {
		double newX = lastState.getX() + arguments.get(0) * Math.cos(lastState.getHeading());
		double newY = lastState.getY() + arguments.get(0) * Math.sin(lastState.getHeading());

		// TODO how to access variables from front-end to determine x and y
		// location of Turtle
		if (newX > UserInterface.WIDTH) {
			newX -= UserInterface.WIDTH;
		}
		if (newY > UserInterface.HEIGHT) {
			newY -= UserInterface.HEIGHT;
		}
		if (newY > UserInterface.HEIGHT) {
			newY -= UserInterface.HEIGHT;
		}
		if(newY < 0){
			newY = UserInterface.HEIGHT + newY;
		}

		double[] newLocation = { newX, newY };
		return newLocation;

	}
}
